"""
Django settings for graphql_tutorial project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os

STR_TO_BOOL = {
    'True': True,
    'False': False
}

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-)nb8kdfn^sb4#97giu*iqwg6l2w6qx^f+@r*3h8d5hcj2$*k0^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = STR_TO_BOOL.get(os.getenv('DEBUG', 'True'))

ALLOWED_HOSTS = ['localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
    'graphene_django',
    'django_filters',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'graphql_tutorial.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'graphql_tutorial.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('POSTGRES_DB'), #here
        'USER': os.environ.get('POSTGRES_USER'), #here
        'PASSWORD': os.environ.get('POSTGRES_PASSWORD'), #here
        'HOST': os.environ.get('POSTGRES_HOST'),
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
USE_S3 = os.getenv('USE_S3') == 'True'

if USE_S3:
    AWS_DEFAULT_ACL='private'
    AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY')
    AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
    AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_MAIN_BUCKET_NAME')
    AWS_STORAGE_TEMP_BUCKET_NAME = os.getenv('AWS_STORAGE_TEMP_BUCKET_NAME')
    AWS_STORAGE_MAIN_BUCKET_NAME = os.getenv('AWS_STORAGE_MAIN_BUCKET_NAME')
    AWS_STORAGE_DOMAIN = os.getenv('AWS_STORAGE_DOMAIN')
    AWS_S3_ENDPOINT_URL = "https://" + os.getenv('AWS_STORAGE_DOMAIN')
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_MAIN_BUCKET_NAME}.{AWS_STORAGE_DOMAIN}'
    AWS_S3_OBJECT_PARAMETERS = {
        'CacheControl': 'max-age=86400',
    }
    AWS_LOCATION = os.getenv('AWS_LOCATION')
    AWS_IS_GZIPPED = True
    STATIC_URL = 'https://%s/%s/' % (AWS_S3_CUSTOM_DOMAIN, AWS_LOCATION)
    STATIC_ROOT = 'static/'

    STORAGES = {
        "staticfiles": {
            "BACKEND": "graphql_tutorial.storage.StaticStorage"
        },
        "default": {
            "BACKEND": "graphql_tutorial.storage.MediaStorage"
        }
    }


# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

GRAPHENE = {
    "SCHEMA": "graphql_tutorial.schema.schema"
}